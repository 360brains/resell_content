<?php

namespace App\Http\Controllers\User;

use App\Models\Task;
use App\Notifications\TaskResult;
use Bitfumes\Multiauth\Model\Admin;
use PhpOffice\PhpWord\IOFactory;
use Illuminate\Http\Request;
use App\Http\Controllers\Controller;

class OfficeController extends Controller
{
    public function createDoc($id){
        $task       = Task::find($id);
        $body       = str_replace("<br>","<br></br>",$task->body);
        $word       = new \PhpOffice\PhpWord\PhpWord();
        $section    = $word->addSection();
        $html       = $task->body;

        \PhpOffice\PhpWord\Shared\Html::addHtml($section, $html, false, false);


        $objWriter = \PhpOffice\PhpWord\IOFactory::createWriter($word, 'Word2007');
        try{
            $objWriter->save(storage_path('MyTask.docx'));

        }catch(Exception $e){

        }
        return response()->download(storage_path('MyTask.docx'));
    }

    public function uploadDoc(Request $request, $id){


        $phpWord = IOFactory::createReader('Word2007')->load($request->file('file')->path());
        $objWriter = \PhpOffice\PhpWord\IOFactory::createWriter($phpWord, 'HTML');
        $objWriter->save('docs.html');

        $body =  file_get_contents('docs.html');

        $body = str_ireplace("<title>PHPWord</title>","", $body );
        $body = str_ireplace("<!-- Generated by PHPWord -->","", $body );


        $task               = Task::find($id);
        $task->body         = $body;
        $task->status       = 'delivered';
        $response           = $task->save();

        $details = [
            'taskName'      => $task->project->id,
            'date'          => now(),
            'message'       => "<a href=".route("admin.users.show", $task->user->id)." class='d-inline'>". $task->user->name . "</a><a href=".route("admin.tasks.show", $task->id)." class='d-inline'> delivered a task.</a>",
            'tooltip'       => 'Task',
            'link'          => "<a href=".route("admin.tasks.show", $task->id)." class='d-inline'>View task</a>",

        ];
        $admins = Admin::all();
        foreach ($admins as $admin) {
            $admin->notify(new TaskResult($details));
        }

        if ($response){
            return redirect()->route('user.tasks')->with("success", "Completed Successfully.");
        }else{
            return redirect()->back()->withInput($request->all())->with("error", "Something went wrong. Please try again.");
        }
    }
}
